Key Questions:
1. How will you set up the project for version control and push it to GitHub?
Initialize the Git repository locally: 
    git init

Create a .txt file or other initial project content.

Stage and commit the initial files: 
    git add .
    git commit -m "Initial commit"

Create a new repository on GitHub named sample-project (without initializing it with any content).

Link the local repository to the remote GitHub repository: 
    git remote add origin git remote add origin https://github.com/Aditya-Dey012/Sample-Project.git
    git branch -M main

Push the initial commit to GitHub: 
    git push -u origin main
________________________________________


2. What steps will you take to create, push, and manage branches effectively?

Steps:
Create a new branch for the feature: 
	git checkout -b feature/update-readme

Make changes to the project, such as adding or modifying files.(in my case adding a readme file)
    echo "Sample Project" > README.md  
    echo "This is a  project for Git and GitHub workflow practice." >> README.md            

Stage and commit changes: 
	git add .
	git commit -m "Add introduction to README.md"

Push the feature branch to the remote repository for collaboration: 
	git push -u origin feature/update-readme

________________________________________

3. How will you ensure the changes in the feature branch are merged into the main branch?
Steps:

Switch to the main branch: 
	git checkout main

Pull the latest changes from the remote main branch to ensure itâ€™s up-to-date: 
	git pull origin main

Merge the feature branch into the main branch: 
	git merge feature/update-readme

Push the updated main branch to the remote repository: 
	git push origin main
________________________________________

4. What commands will you use to clean up unused branches locally and remotely?
Commands:

Delete the feature branch locally: 
	git branch -d feature/update-readme

Delete the feature branch remotely: 
	git push origin --delete feature/update-readme

